"""initial create tables books_users_reviews

Revision ID: 89ac36d61020
Revises: 
Create Date: 2025-03-17 12:21:38.422399

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "89ac36d61020"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


genre_enum = sa.Enum(
    "classics",
    "fantasy",
    "science_fiction",
    "mystery",
    "romance",
    "non_fiction",
    "coloring",
    "fairy_tales",
    "biography",
    "history",
    "poetry",
    "self_help",
    "business",
    "travel",
    "cooking",
    "other_genre",
    name="genre_enum",
)
language_enum = sa.Enum(
    "ukrainian",
    "english",
    "russian",
    "german",
    "french",
    "spanish",
    "italian",
    "polish",
    "chinese",
    "japanese",
    "arabic",
    "turkish",
    "portuguese",
    "dutch",
    "swedish",
    "latin",
    "greek",
    "hebrew",
    "other_language",
    name="language_enum",
)
paper_type_enum = sa.Enum(
    "offset",
    "newsprint",
    "writing",
    "coated",
    "vellum",
    "cardboard",
    name="paper_type_enum",
)
cover_type_enum = sa.Enum("hard", "soft", "spiral", name="cover_type_enum")
user_role_enum = sa.Enum("admin", "superadmin", "user", name="user_role_enum")
categories_enum = sa.Enum(
    "children_literature",
    "young_adult",
    "adult_literature",
    "parents",
    "other_category",
    name="categories_enum",
)
target_ages_enum = sa.Enum(
    "age_1_3",
    "age_3_5",
    "age_5_8",
    "age_8_12",
    "teenager",
    "adult",
    "other_target",
    name="target_ages_enum",
)

booktype_enum = sa.Enum("paperback", "Ebook", "audiobook", name="booktype_enum")


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "books",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("title", sa.String(length=250), nullable=False),
        sa.Column("author", sa.String(length=100), nullable=False),
        sa.Column(
            "genre",
            genre_enum,
            server_default="other_genre",
            nullable=False,
        ),
        sa.Column(
            "language",
            language_enum,
            nullable=False,
        ),
        sa.Column(
            "original_language",
            language_enum,
            nullable=False,
        ),
        sa.Column("price", sa.Numeric(), nullable=False),
        sa.Column("discount", sa.Numeric(precision=4, scale=2), nullable=False),
        sa.Column("stock_quantity", sa.Integer(), nullable=False),
        sa.Column("is_bestseller", sa.Boolean(), nullable=False),
        sa.Column("is_publish", sa.Boolean(), nullable=False),
        sa.Column("is_gifted", sa.Boolean(), nullable=False),
        sa.Column("is_available", sa.Boolean(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("id"),
    )
    op.create_index(op.f("ix_books_author"), "books", ["author"], unique=False)
    op.create_index(op.f("ix_books_discount"), "books", ["discount"], unique=False)
    op.create_index(
        op.f("ix_books_is_available"), "books", ["is_available"], unique=False
    )
    op.create_index(
        op.f("ix_books_is_bestseller"), "books", ["is_bestseller"], unique=False
    )
    op.create_index(op.f("ix_books_is_gifted"), "books", ["is_gifted"], unique=False)
    op.create_index(op.f("ix_books_is_publish"), "books", ["is_publish"], unique=False)
    op.create_index(op.f("ix_books_language"), "books", ["language"], unique=False)
    op.create_index(
        op.f("ix_books_original_language"), "books", ["original_language"], unique=False
    )
    op.create_index(op.f("ix_books_price"), "books", ["price"], unique=False)
    op.create_index(op.f("ix_books_title"), "books", ["title"], unique=False)
    op.create_table(
        "books_info",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("original_title", sa.String(length=250), nullable=True),
        sa.Column("series", sa.String(length=200), nullable=True),
        sa.Column("publisher", sa.String(length=200), nullable=True),
        sa.Column("publication_year", sa.Integer(), nullable=True),
        sa.Column("page_count", sa.Integer(), nullable=True),
        sa.Column(
            "paper_type",
            paper_type_enum,
            nullable=True,
        ),
        sa.Column("translator", sa.String(length=100), nullable=True),
        sa.Column(
            "cover_type",
            cover_type_enum,
            nullable=True,
        ),
        sa.Column("weight", sa.Numeric(precision=5, scale=2), nullable=True),
        sa.Column("dimensions", sa.String(length=20), nullable=True),
        sa.Column("isbn", sa.String(length=50), nullable=True),
        sa.Column("article_number", sa.String(length=50), nullable=True),
        sa.Column("description", sa.String(length=1500), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("id"),
        sa.UniqueConstraint("isbn"),
    )
    op.create_index(
        op.f("ix_books_info_cover_type"), "books_info", ["cover_type"], unique=False
    )
    op.create_index(
        op.f("ix_books_info_original_title"),
        "books_info",
        ["original_title"],
        unique=False,
    )
    op.create_index(
        op.f("ix_books_info_paper_type"), "books_info", ["paper_type"], unique=False
    )
    op.create_index(
        op.f("ix_books_info_publisher"), "books_info", ["publisher"], unique=False
    )
    op.create_index(
        op.f("ix_books_info_translator"), "books_info", ["translator"], unique=False
    )
    op.create_table(
        "users",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("email", sa.String(length=250), nullable=True),
        sa.Column("username", sa.String(length=100), nullable=False),
        sa.Column("first_name", sa.String(length=100), nullable=False),
        sa.Column("last_name", sa.String(length=100), nullable=True),
        sa.Column("phone_number", sa.String(length=50), nullable=True),
        sa.Column("date_of_birth", sa.DateTime(), nullable=True),
        sa.Column("address", sa.String(length=250), nullable=True),
        sa.Column("city", sa.String(length=200), nullable=True),
        sa.Column("postal_code", sa.String(length=50), nullable=True),
        sa.Column("country", sa.String(length=50), nullable=True),
        sa.Column(
            "role",
            user_role_enum,
            server_default="user",
            nullable=False,
        ),
        sa.Column("google_id", sa.String(length=255), nullable=True),
        sa.Column("google_access_token", sa.String(length=512), nullable=True),
        sa.Column("avatar", sa.String(length=255), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("password", sa.String(length=255), nullable=False),
        sa.Column("refresh_token", sa.String(length=255), nullable=True),
        sa.Column("is_confirmed", sa.Boolean(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("google_id"),
        sa.UniqueConstraint("id"),
    )
    op.create_index(op.f("ix_users_email"), "users", ["email"], unique=True)
    op.create_index(op.f("ix_users_first_name"), "users", ["first_name"], unique=False)
    op.create_index(
        op.f("ix_users_phone_number"), "users", ["phone_number"], unique=True
    )
    op.create_index(op.f("ix_users_username"), "users", ["username"], unique=False)
    op.create_table(
        "book_types",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("book_id", sa.UUID(), nullable=False),
        sa.Column(
            "target_age",
            booktype_enum,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["book_id"],
            ["books.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("id"),
    )
    op.create_index(
        op.f("ix_book_types_target_age"), "book_types", ["target_age"], unique=False
    )
    op.create_table(
        "categories",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("book_id", sa.UUID(), nullable=False),
        sa.Column(
            "category",
            categories_enum,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["book_id"],
            ["books.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("id"),
    )
    op.create_index(
        op.f("ix_categories_category"), "categories", ["category"], unique=False
    )
    op.create_table(
        "images",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("book_id", sa.UUID(), nullable=False),
        sa.Column("image_url", sa.String(length=100), nullable=False),
        sa.ForeignKeyConstraint(
            ["book_id"],
            ["books.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("id"),
    )
    op.create_index(op.f("ix_images_image_url"), "images", ["image_url"], unique=False)
    op.create_table(
        "reviews",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("review_text", sa.String(length=2000), nullable=True),
        sa.Column("rate", sa.Numeric(precision=3, scale=1), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("review_date", sa.DateTime(), nullable=True),
        sa.Column("book_id", sa.UUID(), nullable=False),
        sa.Column("user_id", sa.UUID(), nullable=True),
        sa.ForeignKeyConstraint(
            ["book_id"],
            ["books.id"],
        ),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], ondelete="SET NULL"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("id"),
    )
    op.create_index(op.f("ix_reviews_rate"), "reviews", ["rate"], unique=False)
    op.create_table(
        "target_ages",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("book_id", sa.UUID(), nullable=False),
        sa.Column(
            "target_age",
            target_ages_enum,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["book_id"],
            ["books.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("id"),
    )
    op.create_index(
        op.f("ix_target_ages_target_age"), "target_ages", ["target_age"], unique=False
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_target_ages_target_age"), table_name="target_ages")
    op.drop_table("target_ages")
    op.drop_index(op.f("ix_reviews_rate"), table_name="reviews")
    op.drop_table("reviews")
    op.drop_index(op.f("ix_images_image_url"), table_name="images")
    op.drop_table("images")
    op.drop_index(op.f("ix_categories_category"), table_name="categories")
    op.drop_table("categories")
    op.drop_index(op.f("ix_book_types_target_age"), table_name="book_types")
    op.drop_table("book_types")
    op.drop_index(op.f("ix_users_username"), table_name="users")
    op.drop_index(op.f("ix_users_phone_number"), table_name="users")
    op.drop_index(op.f("ix_users_first_name"), table_name="users")
    op.drop_index(op.f("ix_users_email"), table_name="users")
    op.drop_table("users")
    op.drop_index(op.f("ix_books_info_translator"), table_name="books_info")
    op.drop_index(op.f("ix_books_info_publisher"), table_name="books_info")
    op.drop_index(op.f("ix_books_info_paper_type"), table_name="books_info")
    op.drop_index(op.f("ix_books_info_original_title"), table_name="books_info")
    op.drop_index(op.f("ix_books_info_cover_type"), table_name="books_info")
    op.drop_table("books_info")
    op.drop_index(op.f("ix_books_title"), table_name="books")
    op.drop_index(op.f("ix_books_price"), table_name="books")
    op.drop_index(op.f("ix_books_original_language"), table_name="books")
    op.drop_index(op.f("ix_books_language"), table_name="books")
    op.drop_index(op.f("ix_books_is_publish"), table_name="books")
    op.drop_index(op.f("ix_books_is_gifted"), table_name="books")
    op.drop_index(op.f("ix_books_is_bestseller"), table_name="books")
    op.drop_index(op.f("ix_books_is_available"), table_name="books")
    op.drop_index(op.f("ix_books_discount"), table_name="books")
    op.drop_index(op.f("ix_books_author"), table_name="books")
    op.drop_table("books")

    # drop enums
    categories_enum.drop(op.get_bind(), checkfirst=True)
    cover_type_enum.drop(op.get_bind(), checkfirst=True)
    language_enum.drop(op.get_bind(), checkfirst=True)
    genre_enum.drop(op.get_bind(), checkfirst=True)
    paper_type_enum.drop(op.get_bind(), checkfirst=True)
    target_ages_enum.drop(op.get_bind(), checkfirst=True)
    user_role_enum.drop(op.get_bind(), checkfirst=True)
    booktype_enum.drop(op.get_bind(), checkfirst=True)
    # ### end Alembic commands ###
