"""add_gender_field_to_user_table

Revision ID: 68c5f4c9c364
Revises: 278e830d254c
Create Date: 2025-03-23 12:39:10.747341

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "68c5f4c9c364"
down_revision: Union[str, None] = "278e830d254c"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_unique_constraint(None, "book_types", ["id"])
    op.create_unique_constraint(None, "books", ["id"])
    op.create_unique_constraint(None, "books_info", ["id"])
    op.create_unique_constraint(None, "categories", ["id"])
    op.create_unique_constraint(None, "images", ["id"])
    op.create_unique_constraint(None, "reviews", ["id"])
    op.create_unique_constraint(None, "target_ages", ["id"])
    gender_enum = sa.Enum("male", "female", "other_gender", name="genderenum")
    gender_enum.create(op.get_bind(), checkfirst=True)
    op.add_column(
        "users",
        sa.Column(
            "gender",
            gender_enum,
            server_default="other_gender",
            nullable=False,
        ),
    )
    op.create_unique_constraint(None, "users", ["id"])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, "users", type_="unique")
    op.drop_column("users", "gender")
    gender_enum = sa.Enum(name="genderenum")
    gender_enum.drop(op.get_bind(), checkfirst=True)
    op.drop_constraint(None, "target_ages", type_="unique")
    op.drop_constraint(None, "reviews", type_="unique")
    op.drop_constraint(None, "images", type_="unique")
    op.drop_constraint(None, "categories", type_="unique")
    op.drop_constraint(None, "books_info", type_="unique")
    op.drop_constraint(None, "books", type_="unique")
    op.drop_constraint(None, "book_types", type_="unique")
    # ### end Alembic commands ###
