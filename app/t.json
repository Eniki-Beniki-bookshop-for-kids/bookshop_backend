{
  "openapi": "3.1.0",
  "info": {
    "title": "FastAPI",
    "version": "0.1.0"
  },
  "paths": {
    "/api/auth/signup": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Signup",
        "operationId": "signup_api_auth_signup_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserModel"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Login",
        "operationId": "login_api_auth_login_post",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Body_login_api_auth_login_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenModel"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/refresh_token": {
      "get": {
        "tags": [
          "auth"
        ],
        "summary": "Refresh Token",
        "operationId": "refresh_token_api_auth_refresh_token_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenModel"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/products/books/": {
      "get": {
        "tags": [
          "books"
        ],
        "summary": "Get All Books",
        "operationId": "get_all_books_products_books__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/BookShortResponse"
                  },
                  "type": "array",
                  "title": "Response Get All Books Products Books  Get"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/comments/{book_id}": {
      "get": {
        "tags": [
          "comments"
        ],
        "summary": "Get Comments By Book",
        "operationId": "get_comments_by_book_comments__book_id__get",
        "parameters": [
          {
            "name": "book_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "title": "Book Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CommentResponse"
                  },
                  "title": "Response Get Comments By Book Comments  Book Id  Get"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/comments/": {
      "post": {
        "tags": [
          "comments"
        ],
        "summary": "Create Comment",
        "operationId": "create_comment_comments__post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CommentModel"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommentResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/comments/{comment_id}": {
      "put": {
        "tags": [
          "comments"
        ],
        "summary": "Update Comment",
        "operationId": "update_comment_comments__comment_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "comment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "title": "Comment Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CommentModel"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommentResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "comments"
        ],
        "summary": "Delete Comment",
        "operationId": "delete_comment_comments__comment_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "comment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "title": "Comment Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/": {
      "get": {
        "summary": "Root",
        "operationId": "root__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "head": {
        "summary": "Head Root",
        "operationId": "head_root__head",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/healthchecker": {
      "get": {
        "summary": "Healthchecker",
        "operationId": "healthchecker_api_healthchecker_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Body_login_api_auth_login_post": {
        "properties": {
          "grant_type": {
            "anyOf": [
              {
                "type": "string",
                "pattern": "^password$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Grant Type"
          },
          "username": {
            "type": "string",
            "title": "Username"
          },
          "password": {
            "type": "string",
            "title": "Password"
          },
          "scope": {
            "type": "string",
            "title": "Scope",
            "default": ""
          },
          "client_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Client Id"
          },
          "client_secret": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Client Secret"
          }
        },
        "type": "object",
        "required": [
          "username",
          "password"
        ],
        "title": "Body_login_api_auth_login_post"
      },
      "BookShortResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "exclusiveMinimum": 0.0,
            "title": "Id",
            "description": "The ID of the book"
          },
          "author": {
            "type": "string",
            "maxLength": 100,
            "minLength": 1,
            "title": "Author"
          },
          "title": {
            "type": "string",
            "maxLength": 100,
            "minLength": 1,
            "title": "Title",
            "description": "The title of the book"
          },
          "price": {
            "type": "number",
            "exclusiveMinimum": 0.0,
            "title": "Price",
            "description": "The price of the book"
          },
          "is_available": {
            "type": "boolean",
            "title": "Is Available",
            "description": "The availability of the book"
          },
          "stock_quantity": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Stock Quantity",
            "description": "The stock quantity of the book"
          },
          "discount": {
            "type": "number",
            "title": "Discount",
            "description": "The discount of the book"
          },
          "rate": {
            "type": "number",
            "maximum": 5.0,
            "minimum": 0.0,
            "title": "Rate",
            "description": "The rate of the book"
          },
          "comments_count": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Comments Count",
            "description": "The number of comments of the book"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "default": "2025-03-16T22:46:57.902785"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "default": "2025-03-16T22:46:57.902789"
          },
          "age_category": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Age Category",
            "description": "The age category of the book"
          }
        },
        "type": "object",
        "required": [
          "id",
          "author",
          "title",
          "price",
          "is_available",
          "stock_quantity",
          "discount",
          "rate",
          "comments_count",
          "age_category"
        ],
        "title": "BookShortResponse"
      },
      "CommentModel": {
        "properties": {
          "book_id": {
            "type": "integer",
            "exclusiveMinimum": 0.0,
            "title": "Book Id"
          },
          "review_text": {
            "type": "string",
            "maxLength": 1000,
            "minLength": 1,
            "title": "Review Text"
          },
          "rate": {
            "type": "number",
            "maximum": 5.0,
            "exclusiveMinimum": 0.0,
            "title": "Rate"
          }
        },
        "type": "object",
        "required": [
          "book_id",
          "review_text",
          "rate"
        ],
        "title": "CommentModel"
      },
      "CommentResponse": {
        "properties": {
          "book_id": {
            "type": "integer",
            "exclusiveMinimum": 0.0,
            "title": "Book Id"
          },
          "review_text": {
            "type": "string",
            "maxLength": 1000,
            "minLength": 1,
            "title": "Review Text"
          },
          "rate": {
            "type": "number",
            "maximum": 5.0,
            "exclusiveMinimum": 0.0,
            "title": "Rate"
          },
          "id": {
            "type": "integer",
            "exclusiveMinimum": 0.0,
            "title": "Id"
          },
          "user_id": {
            "type": "integer",
            "exclusiveMinimum": 0.0,
            "title": "User Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "book_id",
          "review_text",
          "rate",
          "id",
          "user_id",
          "created_at",
          "updated_at"
        ],
        "title": "CommentResponse"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "TokenModel": {
        "properties": {
          "access_token": {
            "type": "string",
            "title": "Access Token"
          },
          "refresh_token": {
            "type": "string",
            "title": "Refresh Token"
          },
          "token_type": {
            "type": "string",
            "title": "Token Type",
            "default": "bearer"
          }
        },
        "type": "object",
        "required": [
          "access_token",
          "refresh_token"
        ],
        "title": "TokenModel"
      },
      "UserModel": {
        "properties": {
          "username": {
            "type": "string",
            "maxLength": 50,
            "minLength": 5,
            "title": "Username"
          },
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          },
          "password": {
            "type": "string",
            "maxLength": 20,
            "minLength": 6,
            "title": "Password"
          }
        },
        "type": "object",
        "required": [
          "username",
          "email",
          "password"
        ],
        "title": "UserModel"
      },
      "UserResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "username": {
            "type": "string",
            "title": "Username"
          },
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "avatar": {
            "type": "string",
            "title": "Avatar"
          }
        },
        "type": "object",
        "required": [
          "id",
          "username",
          "email",
          "created_at",
          "avatar"
        ],
        "title": "UserResponse"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      }
    },
    "securitySchemes": {
      "HTTPBearer": {
        "type": "http",
        "scheme": "bearer"
      },
      "OAuth2PasswordBearer": {
        "type": "oauth2",
        "flows": {
          "password": {
            "scopes": {},
            "tokenUrl": "/api/auth/login"
          }
        }
      }
    }
  }
}