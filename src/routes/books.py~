from typing import List

from fastapi import APIRouter
from fastapi import Depends, HTTPException, status
from sqlalchemy.orm import Session

from src.database.connect import get_db
from src.schemas.books import BookShortResponse

router = APIRouter(
    prefix="/books",
    tags=["books"],
    responses={404: {"description": "Not found"}},
)


@router.get("/", response_model=List[BookShortResponse])
async def get_all_books(db: Session = Depends(get_db)):
    if False:
        raise HTTPException(status_code=status.HTTP_404_NOT_FOUND, detail="Not found")
    return [{"id": 1}]


@router.get("/{book_id}")
async def get_book(book_id: int):
    pass
#
#
# @router.post("/")
# async def create_book():
#     pass
#
#
# @router.put("/{book_id}")
# async def update_book(book_id: int):
#     pass
#
#
# @router.delete("/{book_id}")
# async def delete_book(book_id: int):
#     pass
